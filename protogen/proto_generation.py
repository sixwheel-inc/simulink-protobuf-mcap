from dense_log_codegen.order_busses import (
    order_busses_by_dependency,
    NOT_ALLOWED_U,
    NOT_ALLOWED_I,
    NOT_ALLOWED_OTHER,
)

FIELD = "  {type} {name} = {index};\n"
MESSAGE = "message {name} {{\n{fields}}}\n"
PROTO = """
// AUTOGENERATED FILE, DO NOT EDIT //
syntax = "proto3";
option go_package = "{go_package_name}";

{messages}
"""

DEFAULT_GO_PACKAGE_NAME = "github.com/sixwheel-inc/tailwind/voyager2/protos"


def generate_proto(mat_structure, go_package_name=DEFAULT_GO_PACKAGE_NAME):
    messages = []
    for bus_name, bus in mat_structure.items():
        fields = []
        for i, (name, type_) in enumerate(bus.items()):
            if type_ == "boolean":
                type_ = "bool"
            elif type_ == "single":
                type_ = "float"
            elif type_ in NOT_ALLOWED_U:
                type_ = "uint32"
            elif type_ in NOT_ALLOWED_I:
                type_ = "int32"
            elif type_ in NOT_ALLOWED_OTHER:
                raise NotImplementedError("ERROR: {} is not supported!".format(type_))

            fields.append(FIELD.format(name=name, type=type_, index=i + 1))
        messages.append(MESSAGE.format(name=bus_name, fields="".join(fields)))
    return PROTO.format(go_package_name=go_package_name, messages="".join(messages))
